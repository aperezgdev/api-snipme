// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: link_analytics.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const removeLinkAnalyticsByLink = `-- name: RemoveLinkAnalyticsByLink :exec
DELETE FROM link_analytics
WHERE link_id = $1
`

func (q *Queries) RemoveLinkAnalyticsByLink(ctx context.Context, linkID pgtype.UUID) error {
	_, err := q.db.Exec(ctx, removeLinkAnalyticsByLink, linkID)
	return err
}

const saveLinkAnalytics = `-- name: SaveLinkAnalytics :exec
INSERT INTO link_analytics (
    id,
    link_id,
    total_views,
    unique_visitors,
    created_on
) VALUES (
    $1, $2, $3, $4, $5
)
`

type SaveLinkAnalyticsParams struct {
	ID             pgtype.UUID
	LinkID         pgtype.UUID
	TotalViews     pgtype.Int4
	UniqueVisitors pgtype.Int4
	CreatedOn      pgtype.Timestamptz
}

func (q *Queries) SaveLinkAnalytics(ctx context.Context, arg SaveLinkAnalyticsParams) error {
	_, err := q.db.Exec(ctx, saveLinkAnalytics,
		arg.ID,
		arg.LinkID,
		arg.TotalViews,
		arg.UniqueVisitors,
		arg.CreatedOn,
	)
	return err
}

const updateLinkAnalytics = `-- name: UpdateLinkAnalytics :exec
UPDATE link_analytics
SET
    total_views = $2,
    unique_visitors = $3,
    created_on = COALESCE($4, created_on)
WHERE
    id = $1
`

type UpdateLinkAnalyticsParams struct {
	ID             pgtype.UUID
	TotalViews     pgtype.Int4
	UniqueVisitors pgtype.Int4
	CreatedOn      pgtype.Timestamptz
}

func (q *Queries) UpdateLinkAnalytics(ctx context.Context, arg UpdateLinkAnalyticsParams) error {
	_, err := q.db.Exec(ctx, updateLinkAnalytics,
		arg.ID,
		arg.TotalViews,
		arg.UniqueVisitors,
		arg.CreatedOn,
	)
	return err
}
