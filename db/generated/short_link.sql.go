// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: short_link.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const findShortLinkByCode = `-- name: FindShortLinkByCode :one
SELECT
    id,
    original_route,
    client_id,
    code,
    created_on
FROM short_link
WHERE code = $1
`

func (q *Queries) FindShortLinkByCode(ctx context.Context, code string) (ShortLink, error) {
	row := q.db.QueryRow(ctx, findShortLinkByCode, code)
	var i ShortLink
	err := row.Scan(
		&i.ID,
		&i.OriginalRoute,
		&i.ClientID,
		&i.Code,
		&i.CreatedOn,
	)
	return i, err
}

const removeShortLink = `-- name: RemoveShortLink :exec
DELETE FROM short_link
WHERE id = $1
`

func (q *Queries) RemoveShortLink(ctx context.Context, id pgtype.UUID) error {
	_, err := q.db.Exec(ctx, removeShortLink, id)
	return err
}

const saveShortLink = `-- name: SaveShortLink :exec
INSERT INTO short_link (id, original_route, client_id, code, created_on)
VALUES ($1, $2, $3, $4, $5)
`

type SaveShortLinkParams struct {
	ID            pgtype.UUID
	OriginalRoute string
	ClientID      pgtype.UUID
	Code          string
	CreatedOn     pgtype.Timestamptz
}

func (q *Queries) SaveShortLink(ctx context.Context, arg SaveShortLinkParams) error {
	_, err := q.db.Exec(ctx, saveShortLink,
		arg.ID,
		arg.OriginalRoute,
		arg.ClientID,
		arg.Code,
		arg.CreatedOn,
	)
	return err
}
